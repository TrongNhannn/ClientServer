{"ast":null,"code":"export default ((state, action) => {\n  switch (action.type) {\n    case \"initializeData\":\n      return initializeData(state, action);\n      break;\n    case \"setCurrentMethod\":\n      return setCurrentMethod(state, action);\n      break;\n    case \"addApi\":\n      return addApi(state, action);\n      break;\n    case \"setCurrentApi\":\n      return setCurrentApi(state, action);\n      break;\n    case \"destroyCurrentApi\":\n      return destroyCurrentApi(state, action);\n      break;\n    case \"editCurrentApi\":\n      return editCurrentApi(state, action);\n      break;\n    case \"setCurrentSelectedTables\":\n      return setCurrentSelectedTables(state, action);\n      break;\n    case \"setSelectedParams\":\n      return setSelectedParams(state, action);\n      break;\n    case \"setSelectedFields\":\n      return setSelectedFields(state, action);\n      break;\n    case \"setCurrentCustomFields\":\n      return setCurrentCustomFields(state, action);\n      break;\n    case \"setSelectedFieldAlias\":\n      return setSelectedFieldAlias(state, action);\n      break;\n    case \"removeFromSelectedFields\":\n      return removeFromSelectedFields(state, action);\n      break;\n    case \"dropApi\":\n      return dropApi(state, action);\n      break;\n    default:\n      return state;\n  }\n});\nconst initializeData = (state, action) => {\n  const {\n    apis\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.apis = apis;\n  return {\n    ...state,\n    api\n  };\n};\nconst setCurrentMethod = (state, action) => {\n  const {\n    method\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.currentMethod = method;\n  return {\n    ...state,\n    api\n  };\n};\nconst addApi = (state, action) => {\n  const {\n    newApi\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.apis = [...api.apis, newApi];\n  return {\n    ...state,\n    api\n  };\n};\nconst setCurrentApi = (state, action) => {\n  const {\n    selectedApi\n  } = action.payload;\n  const {\n    api\n  } = state;\n  console.log(selectedApi);\n  api.currentApi = selectedApi;\n  api.currentSelectedTables = selectedApi.tables;\n  api.currentFields = selectedApi.fields;\n  api.currentParams = selectedApi.params;\n  api.currentCustomFields = selectedApi.custom;\n  console.log(api);\n  return {\n    ...state,\n    api: {\n      ...api\n    }\n  };\n};\nconst destroyCurrentApi = (state, action) => {\n  const {\n    api\n  } = state;\n  api.currentApi = {};\n  return {\n    ...state,\n    api\n  };\n};\nconst editCurrentApi = (state, action) => {\n  const {\n    newApi\n  } = action.payload;\n  const {\n    api\n  } = state;\n  const {\n    apis\n  } = api;\n  const newApis = apis.map(a => {\n    if (a.url.id_str == newApi.url.id_str) {\n      return newApi;\n    } else {\n      return a;\n    }\n  });\n  api.currentApi = newApi;\n  api.apis = newApis;\n  return {\n    ...state,\n    api\n  };\n};\nconst setCurrentSelectedTables = (state, action) => {\n  const {\n    sTables\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.currentSelectedTables = sTables;\n  return {\n    ...state,\n    api\n  };\n};\nconst setSelectedParams = (state, action) => {\n  const {\n    params\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.currentParams = params;\n  return {\n    ...state,\n    api\n  };\n};\nconst setSelectedFields = (state, action) => {\n  const {\n    fields\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.currentFields = fields;\n  return {\n    ...state,\n    api\n  };\n};\nconst setSelectedFieldAlias = (state, action) => {\n  const {\n    field,\n    alias\n  } = action.payload;\n  const {\n    api\n  } = state;\n  const {\n    currentFields\n  } = api;\n  const newCurrentFields = currentFields.map(f => {\n    if (f.field_alias == field.field_alias) {\n      f.fomular_alias = alias;\n    }\n    return f;\n  });\n  api.currentFields = newCurrentFields;\n  return {\n    ...state,\n    api\n  };\n};\nconst setCurrentCustomFields = (state, action) => {\n  const {\n    fields\n  } = action.payload;\n  const {\n    api\n  } = state;\n  api.currentCustomFields = fields;\n  return {\n    ...state,\n    api\n  };\n};\nconst removeFromSelectedFields = (state, action) => {\n  const {\n    field\n  } = action.payload;\n  const {\n    api\n  } = state;\n  const {\n    currentFields\n  } = api;\n  const newCurrentFields = currentFields.filter(f => f.field_alias != field.field_alias);\n  api.currentFields = newCurrentFields;\n  return {\n    ...state,\n    api\n  };\n};\nconst dropApi = (state, action) => {\n  const {\n    dropApi\n  } = action.payload;\n  const {\n    api\n  } = state;\n  const {\n    apis\n  } = api;\n  const newApis = apis.filter(a => a.url.id_str != dropApi.url.id_str);\n  api.apis = newApis;\n  return {\n    ...state,\n    api\n  };\n};","map":{"version":3,"names":["state","action","type","initializeData","setCurrentMethod","addApi","setCurrentApi","destroyCurrentApi","editCurrentApi","setCurrentSelectedTables","setSelectedParams","setSelectedFields","setCurrentCustomFields","setSelectedFieldAlias","removeFromSelectedFields","dropApi","apis","payload","api","method","currentMethod","newApi","selectedApi","console","log","currentApi","currentSelectedTables","tables","currentFields","fields","currentParams","params","currentCustomFields","custom","newApis","map","a","url","id_str","sTables","field","alias","newCurrentFields","f","field_alias","fomular_alias","filter"],"sources":["D:/Nhan/DIPE_V2/Client/ClientServer/APP/src/redux/router/api.js"],"sourcesContent":["export default (state, action) => {\n    switch (action.type) {\n        case \"initializeData\":\n            return initializeData( state, action )\n            break;\n\n        case \"setCurrentMethod\":\n            return setCurrentMethod( state, action )\n            break;\n\n        case \"addApi\":\n            return addApi( state, action );\n            break;\n\n        case \"setCurrentApi\":\n            return setCurrentApi( state, action );\n            break;\n        case \"destroyCurrentApi\":\n            return destroyCurrentApi( state, action );\n            break;\n\n        case \"editCurrentApi\":\n            return editCurrentApi( state, action );\n            break;\n\n        case \"setCurrentSelectedTables\":\n            return setCurrentSelectedTables(state, action);\n            break;\n\n        case \"setSelectedParams\":\n            return setSelectedParams(state, action);\n            break;\n\n        case \"setSelectedFields\":\n            return setSelectedFields(state, action);\n            break;\n\n        case \"setCurrentCustomFields\":\n            return setCurrentCustomFields(state, action);\n            break;\n\n        case \"setSelectedFieldAlias\":\n            return setSelectedFieldAlias( state, action );\n            break;\n\n        case \"removeFromSelectedFields\":\n            return removeFromSelectedFields( state, action );\n            break;\n\n        case \"dropApi\":\n            return dropApi( state, action );\n            break;\n\n        default:\n            return state;\n    }\n}\n\nconst initializeData = (state, action) => {\n    const { apis } = action.payload;\n    const { api } = state;\n    api.apis = apis;\n    return { ...state, api }\n}\n\nconst setCurrentMethod = ( state, action ) => {\n    const { method } = action.payload;\n    const { api } = state;\n    api.currentMethod = method;\n\n    return {...state, api }\n}\n\nconst addApi = ( state, action ) => {\n    const { newApi } = action.payload;\n    const { api } = state;\n    api.apis = [ ...api.apis, newApi ];\n\n    return { ...state, api };\n}\n\nconst setCurrentApi = ( state, action ) => {\n    const { selectedApi } = action.payload;\n    const { api } = state;\n    console.log(selectedApi)\n    api.currentApi = selectedApi;\n    api.currentSelectedTables = selectedApi.tables;\n    api.currentFields = selectedApi.fields;\n    api.currentParams = selectedApi.params;\n    api.currentCustomFields = selectedApi.custom;\n    console.log(api)\n    return { ...state, api: { ...api } };\n}\n\nconst destroyCurrentApi = ( state, action ) => {\n    const { api } = state;\n    api.currentApi = {};\n    return { ...state, api };\n}\n\nconst editCurrentApi = ( state, action ) => {\n    const { newApi } = action.payload;\n    const { api } = state;\n    const { apis } = api;\n\n    const newApis = apis.map( a => {\n        if( a.url.id_str == newApi.url.id_str ){\n            return newApi\n        } else{\n            return a\n        }\n    })\n    api.currentApi = newApi;\n    api.apis = newApis;\n\n    return { ...state, api };\n}\n\nconst setCurrentSelectedTables = (state, action) => {\n    const { sTables } = action.payload;\n    const { api } = state;\n    api.currentSelectedTables = sTables;\n    return { ...state, api }\n}\n\nconst setSelectedParams = ( state, action ) => {\n    const { params } = action.payload;\n    const { api } = state;\n    api.currentParams = params;\n    return { ...state, api }\n}\n\nconst setSelectedFields = ( state, action ) => {\n    const { fields } = action.payload;\n    const { api } = state;\n    api.currentFields = fields;\n    return { ...state, api }\n}\n\nconst setSelectedFieldAlias = ( state, action ) => {\n    const { field, alias } = action.payload;\n    const { api } = state;\n    const { currentFields } = api;\n\n    const newCurrentFields = currentFields.map( f => {\n        if( f.field_alias == field.field_alias ){\n            f.fomular_alias = alias;\n        }\n        return f;\n    })\n    api.currentFields = newCurrentFields;\n    return { ...state, api }\n}\n\n\nconst setCurrentCustomFields = (state, action) => {\n    const { fields } = action.payload;\n    const { api } = state;\n    api.currentCustomFields = fields;\n    return { ...state, api }\n}\n\nconst removeFromSelectedFields = (state, action) => {\n    const { field } = action.payload;\n    const { api } = state;\n    const { currentFields } = api;\n    const newCurrentFields = currentFields.filter( f => f.field_alias != field.field_alias );\n    api.currentFields = newCurrentFields;\n    return { ...state, api }\n}\n\nconst dropApi = (state, action) => {\n    const { dropApi } = action.payload;\n\n    const { api }   = state;\n    const { apis }  = api;\n    const newApis   = apis.filter( a => a.url.id_str != dropApi.url.id_str );\n    api.apis = newApis;\n\n    return { ...state, api }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}