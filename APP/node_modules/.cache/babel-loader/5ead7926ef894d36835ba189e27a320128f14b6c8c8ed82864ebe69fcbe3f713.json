{"ast":null,"code":"import { useDispatch } from 'react-redux';\nimport proxy from '../APP_API';\nimport navbarLinks from '../cpn/navbar/navbar-links';\nimport functions from './functions';\nimport defaultBranch from './router/defaultBranch';\nimport branchAlert from './router/alert';\nimport Alert from './alert';\nimport Confirm from './confirm';\nimport database from './router/database';\nimport api from './router/api';\nimport datatypes from './field-props';\nimport pages from '../dipe-configs/ui.json';\nconst initState = {\n  highlight: 0,\n  navState: true,\n  unique_string: \"dipev1\",\n  defaultImage: \"/assets/image/icon.png\",\n  proxy,\n  navbarLinks,\n  functions,\n  Alert,\n  Confirm,\n  datatypes,\n  pages: pages.pages,\n  database: {\n    tables: [],\n    fields: [],\n    currentTable: {},\n    currentField: {}\n  },\n  api: {\n    apis: [],\n    currentApi: {},\n    currentSelectedTables: [],\n    currentParams: [],\n    currentFields: [],\n    currentCustomFields: []\n  },\n  floatingForms: {},\n  auth: {\n    credential_string: localStorage.getItem('credential_string'),\n    _token: localStorage.getItem('_token'),\n    role: localStorage.getItem('role')\n  },\n  alert: {\n    fired: false,\n    type: \"success\",\n    label: \"Thành công\",\n    message: \"Cập nhật thành công nhe quí dị!\"\n  },\n  confirm: {\n    fired: false,\n    label: \"Chờ đã\",\n    message: \"Thay đổi này có thể dẫn đến lỗi hoặc một điều gì đó không thể đoán trước!\",\n    func: () => {},\n    defaultValue: \"\"\n  },\n  selectedConstraint: {}\n};\nexport const fetchPages = () => async dispatch => {\n  try {\n    const response = await fetch('/ui.json');\n    const pagesData = await response.json();\n    dispatch({\n      type: 'SET_PAGES',\n      payload: pagesData.pages\n    });\n  } catch (error) {\n    console.error('Error fetching pages:', error);\n  }\n};\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.branch) {\n    case \"db\":\n      return database(state, action);\n      break;\n    case \"api\":\n      return api(state, action);\n      break;\n    case \"alert\":\n      return branchAlert(state, action);\n      break;\n    case 'SET_PAGES':\n      return {\n        ...state,\n        pages: action.payload\n      };\n    default:\n      return defaultBranch(state, action);\n      break;\n  }\n});","map":{"version":3,"names":["useDispatch","proxy","navbarLinks","functions","defaultBranch","branchAlert","Alert","Confirm","database","api","datatypes","pages","initState","highlight","navState","unique_string","defaultImage","tables","fields","currentTable","currentField","apis","currentApi","currentSelectedTables","currentParams","currentFields","currentCustomFields","floatingForms","auth","credential_string","localStorage","getItem","_token","role","alert","fired","type","label","message","confirm","func","defaultValue","selectedConstraint","fetchPages","dispatch","response","fetch","pagesData","json","payload","error","console","state","action","branch"],"sources":["C:/Users/trongnhan/OneDrive/Máy tính/ClientServer/APP/src/redux/reducer.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport proxy from '../APP_API';\r\nimport navbarLinks from '../cpn/navbar/navbar-links';\r\nimport functions from './functions';\r\nimport defaultBranch from './router/defaultBranch';\r\nimport branchAlert from './router/alert';\r\nimport Alert from './alert';\r\nimport Confirm from './confirm';\r\nimport database from './router/database';\r\nimport api from './router/api';\r\n\r\nimport datatypes from './field-props';\r\n\r\nimport pages from '../dipe-configs/ui.json';\r\n\r\nconst initState = {\r\n    highlight: 0,\r\n    navState: true,\r\n    unique_string: \"dipev1\",\r\n    defaultImage: \"/assets/image/icon.png\",\r\n    proxy,\r\n    navbarLinks,\r\n    functions,\r\n    Alert,\r\n    Confirm,\r\n    datatypes,\r\n    pages: pages.pages,\r\n\r\n    database: {\r\n        tables: [],\r\n        fields: [],\r\n        currentTable: {},\r\n        currentField: {},\r\n    },\r\n\r\n    api: {\r\n        apis: [],\r\n        currentApi: {},\r\n        currentSelectedTables: [],\r\n        currentParams: [],\r\n        currentFields: [],\r\n        currentCustomFields: [],\r\n    },\r\n\r\n    floatingForms: {\r\n\r\n    },\r\n\r\n    auth: {\r\n        credential_string: localStorage.getItem('credential_string'),\r\n        _token: localStorage.getItem('_token'),\r\n        role: localStorage.getItem('role'),\r\n    },\r\n\r\n    alert: {\r\n        fired: false,\r\n        type: \"success\",\r\n        label: \"Thành công\",\r\n        message: \"Cập nhật thành công nhe quí dị!\",\r\n    },\r\n    confirm: {\r\n        fired: false,\r\n        label: \"Chờ đã\",\r\n        message: \"Thay đổi này có thể dẫn đến lỗi hoặc một điều gì đó không thể đoán trước!\",\r\n        func: () => { },\r\n        defaultValue: \"\",\r\n    },\r\n\r\n    selectedConstraint: {\r\n\r\n    }\r\n}\r\nexport const fetchPages = () => async (dispatch) => {\r\n    try {\r\n        const response = await fetch('/ui.json');\r\n        const pagesData = await response.json();\r\n        dispatch({ type: 'SET_PAGES', payload: pagesData.pages });\r\n    } catch (error) {\r\n        console.error('Error fetching pages:', error);\r\n    }\r\n};\r\nexport default (state = initState, action) => {\r\n    switch (action.branch) {\r\n        case \"db\":\r\n            return database(state, action);\r\n            break;\r\n\r\n        case \"api\":\r\n            return api(state, action);\r\n            break;\r\n\r\n        case \"alert\":\r\n            return branchAlert(state, action);\r\n            break;\r\n        case 'SET_PAGES':\r\n            return { ...state, pages: action.payload };\r\n        default:\r\n            return defaultBranch(state, action);\r\n            break;\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,KAAK,MAAM,YAAY;AAC9B,OAAOC,WAAW,MAAM,4BAA4B;AACpD,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,GAAG,MAAM,cAAc;AAE9B,OAAOC,SAAS,MAAM,eAAe;AAErC,OAAOC,KAAK,MAAM,yBAAyB;AAE3C,MAAMC,SAAS,GAAG;EACdC,SAAS,EAAE,CAAC;EACZC,QAAQ,EAAE,IAAI;EACdC,aAAa,EAAE,QAAQ;EACvBC,YAAY,EAAE,wBAAwB;EACtCf,KAAK;EACLC,WAAW;EACXC,SAAS;EACTG,KAAK;EACLC,OAAO;EACPG,SAAS;EACTC,KAAK,EAAEA,KAAK,CAACA,KAAK;EAElBH,QAAQ,EAAE;IACNS,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVC,YAAY,EAAE,CAAC,CAAC;IAChBC,YAAY,EAAE,CAAC;EACnB,CAAC;EAEDX,GAAG,EAAE;IACDY,IAAI,EAAE,EAAE;IACRC,UAAU,EAAE,CAAC,CAAC;IACdC,qBAAqB,EAAE,EAAE;IACzBC,aAAa,EAAE,EAAE;IACjBC,aAAa,EAAE,EAAE;IACjBC,mBAAmB,EAAE;EACzB,CAAC;EAEDC,aAAa,EAAE,CAEf,CAAC;EAEDC,IAAI,EAAE;IACFC,iBAAiB,EAAEC,YAAY,CAACC,OAAO,CAAC,mBAAmB,CAAC;IAC5DC,MAAM,EAAEF,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;IACtCE,IAAI,EAAEH,YAAY,CAACC,OAAO,CAAC,MAAM;EACrC,CAAC;EAEDG,KAAK,EAAE;IACHC,KAAK,EAAE,KAAK;IACZC,IAAI,EAAE,SAAS;IACfC,KAAK,EAAE,YAAY;IACnBC,OAAO,EAAE;EACb,CAAC;EACDC,OAAO,EAAE;IACLJ,KAAK,EAAE,KAAK;IACZE,KAAK,EAAE,QAAQ;IACfC,OAAO,EAAE,2EAA2E;IACpFE,IAAI,EAAE,MAAM,CAAE,CAAC;IACfC,YAAY,EAAE;EAClB,CAAC;EAEDC,kBAAkB,EAAE,CAEpB;AACJ,CAAC;AACD,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAQ,IAAK;EAChD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAU,CAAC;IACxC,MAAMC,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;IACvCJ,QAAQ,CAAC;MAAER,IAAI,EAAE,WAAW;MAAEa,OAAO,EAAEF,SAAS,CAACpC;IAAM,CAAC,CAAC;EAC7D,CAAC,CAAC,OAAOuC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EACjD;AACJ,CAAC;AACD,gBAAe,YAA+B;EAAA,IAA9BE,KAAK,uEAAGxC,SAAS;EAAA,IAAEyC,MAAM;EACrC,QAAQA,MAAM,CAACC,MAAM;IACjB,KAAK,IAAI;MACL,OAAO9C,QAAQ,CAAC4C,KAAK,EAAEC,MAAM,CAAC;MAC9B;IAEJ,KAAK,KAAK;MACN,OAAO5C,GAAG,CAAC2C,KAAK,EAAEC,MAAM,CAAC;MACzB;IAEJ,KAAK,OAAO;MACR,OAAOhD,WAAW,CAAC+C,KAAK,EAAEC,MAAM,CAAC;MACjC;IACJ,KAAK,WAAW;MACZ,OAAO;QAAE,GAAGD,KAAK;QAAEzC,KAAK,EAAE0C,MAAM,CAACJ;MAAQ,CAAC;IAC9C;MACI,OAAO7C,aAAa,CAACgD,KAAK,EAAEC,MAAM,CAAC;MACnC;EAAM;AAElB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}